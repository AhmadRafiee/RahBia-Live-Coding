---
- name: Check if the repository exists | pypi repository
  uri:
    url: "{{ nexus_main_url }}/service/rest/v1/repositories/pypi/proxy/{{ item.name }}"
    method: GET
    user: "{{ nexus_username }}"
    password: "{{ nexus_password }}"
    force_basic_auth: yes
    status_code: 200
  register: pypi_repo_check_response
  failed_when: pypi_repo_check_response.status != 200
  ignore_errors: true
  tags:
    - setup_nexus
    - config_nexus
    - create_pypi_repo

- name: Create Raw proxy repositories
  uri:
    url: "{{ nexus_main_url }}/service/rest/v1/repositories/pypi/proxy"
    user: "{{ nexus_username }}"
    password: "{{ nexus_password }}"
    method: POST
    force_basic_auth: yes
    status_code: 201
    body_format: json
    headers:
      Content-Type: "application/json"
    body: >-
      {
        "name": "{{ item.name }}",
        "online": true,
        "storage": {
          "blobStoreName": "{{ item.blob }}",
          "strictContentTypeValidation": true
        },
        "cleanup": {
          "policyNames": [
            "{{ item.cleanup_policy }}"
          ]
        },
        "proxy": {
          "remoteUrl": "{{ item.remote_url }}",
          "contentMaxAge": 1440,
          "metadataMaxAge": 1440
        },
        "negativeCache": {
          "enabled": true,
          "timeToLive": 1440
        },
        "httpClient": {
          "blocked": false,
          "autoBlock": false,
        },
        "routingRule": "string",
        "replication": {
          "preemptivePullEnabled": false,
          "assetPathRegex": "string"
        },
        "pypi": {
          "removeQuarantined": true
        }
      }
  when: pypi_repo_check_response.status != 200
  tags:
    - setup_nexus
    - config_nexus
    - create_pypi_repo

